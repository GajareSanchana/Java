public class GenerateParentheses {
    public static void main(String[] args) {
        int n = 3;  // change n as needed
        int total = 1 << (2 * n);  // total = 2^(2n)

        for (int mask = 0; mask < total; mask++) {
            StringBuilder sb = new StringBuilder();
            for (int i = 2 * n - 1; i >= 0; i--) {
                if (((mask >> i) & 1) == 0) sb.append('(');
                else sb.append(')');
            }
            if (isValid(sb.toString())) {
                System.out.println(sb.toString());
            }
        }
    }

    private static boolean isValid(String s) {
        int balance = 0;
        for (char c : s.toCharArray()) {
            if (c == '(') balance++;
            else balance--;
            if (balance < 0) return false;  // too many ')'
        }
        return balance == 0;  // valid only if balanced
    }
}
